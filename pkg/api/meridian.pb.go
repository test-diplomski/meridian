// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: meridian.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddNamespaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId                     string             `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name                      string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Labels                    map[string]string  `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Quotas                    map[string]float64 `protobuf:"bytes,4,rep,name=quotas,proto3" json:"quotas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	SeccompDefinitionStrategy string             `protobuf:"bytes,5,opt,name=seccompDefinitionStrategy,proto3" json:"seccompDefinitionStrategy,omitempty"`
	Profile                   *SeccompProfile    `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
	ParentName                string             `protobuf:"bytes,7,opt,name=parentName,proto3" json:"parentName,omitempty"`
}

func (x *AddNamespaceReq) Reset() {
	*x = AddNamespaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNamespaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNamespaceReq) ProtoMessage() {}

func (x *AddNamespaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNamespaceReq.ProtoReflect.Descriptor instead.
func (*AddNamespaceReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{0}
}

func (x *AddNamespaceReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AddNamespaceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddNamespaceReq) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *AddNamespaceReq) GetQuotas() map[string]float64 {
	if x != nil {
		return x.Quotas
	}
	return nil
}

func (x *AddNamespaceReq) GetSeccompDefinitionStrategy() string {
	if x != nil {
		return x.SeccompDefinitionStrategy
	}
	return ""
}

func (x *AddNamespaceReq) GetProfile() *SeccompProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *AddNamespaceReq) GetParentName() string {
	if x != nil {
		return x.ParentName
	}
	return ""
}

type AddNamespaceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddNamespaceResp) Reset() {
	*x = AddNamespaceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNamespaceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNamespaceResp) ProtoMessage() {}

func (x *AddNamespaceResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNamespaceResp.ProtoReflect.Descriptor instead.
func (*AddNamespaceResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{1}
}

type RemoveNamespaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveNamespaceReq) Reset() {
	*x = RemoveNamespaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNamespaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNamespaceReq) ProtoMessage() {}

func (x *RemoveNamespaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNamespaceReq.ProtoReflect.Descriptor instead.
func (*RemoveNamespaceReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveNamespaceReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveNamespaceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveNamespaceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveNamespaceResp) Reset() {
	*x = RemoveNamespaceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNamespaceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNamespaceResp) ProtoMessage() {}

func (x *RemoveNamespaceResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNamespaceResp.ProtoReflect.Descriptor instead.
func (*RemoveNamespaceResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{3}
}

type AddAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId                     string             `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Namespace                 string             `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name                      string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Quotas                    map[string]float64 `protobuf:"bytes,4,rep,name=quotas,proto3" json:"quotas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Profile                   *SeccompProfile    `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	SeccompDefinitionStrategy string             `protobuf:"bytes,6,opt,name=seccompDefinitionStrategy,proto3" json:"seccompDefinitionStrategy,omitempty"`
}

func (x *AddAppReq) Reset() {
	*x = AddAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppReq) ProtoMessage() {}

func (x *AddAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppReq.ProtoReflect.Descriptor instead.
func (*AddAppReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{4}
}

func (x *AddAppReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *AddAppReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddAppReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddAppReq) GetQuotas() map[string]float64 {
	if x != nil {
		return x.Quotas
	}
	return nil
}

func (x *AddAppReq) GetProfile() *SeccompProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *AddAppReq) GetSeccompDefinitionStrategy() string {
	if x != nil {
		return x.SeccompDefinitionStrategy
	}
	return ""
}

type AddAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddAppResp) Reset() {
	*x = AddAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAppResp) ProtoMessage() {}

func (x *AddAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAppResp.ProtoReflect.Descriptor instead.
func (*AddAppResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{5}
}

type RemoveAppReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveAppReq) Reset() {
	*x = RemoveAppReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppReq) ProtoMessage() {}

func (x *RemoveAppReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppReq.ProtoReflect.Descriptor instead.
func (*RemoveAppReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveAppReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *RemoveAppReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *RemoveAppReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveAppResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveAppResp) Reset() {
	*x = RemoveAppResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveAppResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAppResp) ProtoMessage() {}

func (x *RemoveAppResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAppResp.ProtoReflect.Descriptor instead.
func (*RemoveAppResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{7}
}

type GetNamespaceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetNamespaceReq) Reset() {
	*x = GetNamespaceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceReq) ProtoMessage() {}

func (x *GetNamespaceReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceReq.ProtoReflect.Descriptor instead.
func (*GetNamespaceReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{8}
}

func (x *GetNamespaceReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *GetNamespaceReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetNamespaceResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string  `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total     map[string]float64 `protobuf:"bytes,3,rep,name=total,proto3" json:"total,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Available map[string]float64 `protobuf:"bytes,4,rep,name=available,proto3" json:"available,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Utilized  map[string]float64 `protobuf:"bytes,5,rep,name=utilized,proto3" json:"utilized,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Profile   *SeccompProfile    `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetNamespaceResp) Reset() {
	*x = GetNamespaceResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceResp) ProtoMessage() {}

func (x *GetNamespaceResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceResp.ProtoReflect.Descriptor instead.
func (*GetNamespaceResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{9}
}

func (x *GetNamespaceResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetNamespaceResp) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetNamespaceResp) GetTotal() map[string]float64 {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *GetNamespaceResp) GetAvailable() map[string]float64 {
	if x != nil {
		return x.Available
	}
	return nil
}

func (x *GetNamespaceResp) GetUtilized() map[string]float64 {
	if x != nil {
		return x.Utilized
	}
	return nil
}

func (x *GetNamespaceResp) GetProfile() *SeccompProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type GetNamespaceHierarchyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId string `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
}

func (x *GetNamespaceHierarchyReq) Reset() {
	*x = GetNamespaceHierarchyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceHierarchyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceHierarchyReq) ProtoMessage() {}

func (x *GetNamespaceHierarchyReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceHierarchyReq.ProtoReflect.Descriptor instead.
func (*GetNamespaceHierarchyReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{10}
}

func (x *GetNamespaceHierarchyReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

type GetNamespaceHierarchyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  *GetNamespaceHierarchyResp_Namespace `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Apps       []*GetNamespaceHierarchyResp_App     `protobuf:"bytes,2,rep,name=apps,proto3" json:"apps,omitempty"`
	Namespaces []*GetNamespaceHierarchyResp         `protobuf:"bytes,3,rep,name=namespaces,proto3" json:"namespaces,omitempty"`
}

func (x *GetNamespaceHierarchyResp) Reset() {
	*x = GetNamespaceHierarchyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceHierarchyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceHierarchyResp) ProtoMessage() {}

func (x *GetNamespaceHierarchyResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceHierarchyResp.ProtoReflect.Descriptor instead.
func (*GetNamespaceHierarchyResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{11}
}

func (x *GetNamespaceHierarchyResp) GetNamespace() *GetNamespaceHierarchyResp_Namespace {
	if x != nil {
		return x.Namespace
	}
	return nil
}

func (x *GetNamespaceHierarchyResp) GetApps() []*GetNamespaceHierarchyResp_App {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *GetNamespaceHierarchyResp) GetNamespaces() []*GetNamespaceHierarchyResp {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

type SetNamespaceResourcesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId  string             `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Name   string             `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Quotas map[string]float64 `protobuf:"bytes,4,rep,name=quotas,proto3" json:"quotas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *SetNamespaceResourcesReq) Reset() {
	*x = SetNamespaceResourcesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNamespaceResourcesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNamespaceResourcesReq) ProtoMessage() {}

func (x *SetNamespaceResourcesReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNamespaceResourcesReq.ProtoReflect.Descriptor instead.
func (*SetNamespaceResourcesReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{12}
}

func (x *SetNamespaceResourcesReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SetNamespaceResourcesReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetNamespaceResourcesReq) GetQuotas() map[string]float64 {
	if x != nil {
		return x.Quotas
	}
	return nil
}

type SetNamespaceResourcesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetNamespaceResourcesResp) Reset() {
	*x = SetNamespaceResourcesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetNamespaceResourcesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNamespaceResourcesResp) ProtoMessage() {}

func (x *SetNamespaceResourcesResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNamespaceResourcesResp.ProtoReflect.Descriptor instead.
func (*SetNamespaceResourcesResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{13}
}

type SetAppResourcesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     string             `protobuf:"bytes,1,opt,name=orgId,proto3" json:"orgId,omitempty"`
	Namespace string             `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Name      string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Quotas    map[string]float64 `protobuf:"bytes,4,rep,name=quotas,proto3" json:"quotas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *SetAppResourcesReq) Reset() {
	*x = SetAppResourcesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAppResourcesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppResourcesReq) ProtoMessage() {}

func (x *SetAppResourcesReq) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppResourcesReq.ProtoReflect.Descriptor instead.
func (*SetAppResourcesReq) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{14}
}

func (x *SetAppResourcesReq) GetOrgId() string {
	if x != nil {
		return x.OrgId
	}
	return ""
}

func (x *SetAppResourcesReq) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *SetAppResourcesReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetAppResourcesReq) GetQuotas() map[string]float64 {
	if x != nil {
		return x.Quotas
	}
	return nil
}

type SetAppResourcesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetAppResourcesResp) Reset() {
	*x = SetAppResourcesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetAppResourcesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetAppResourcesResp) ProtoMessage() {}

func (x *SetAppResourcesResp) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetAppResourcesResp.ProtoReflect.Descriptor instead.
func (*SetAppResourcesResp) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{15}
}

type GetNamespaceHierarchyResp_Namespace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Labels    map[string]string  `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Total     map[string]float64 `protobuf:"bytes,3,rep,name=total,proto3" json:"total,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Available map[string]float64 `protobuf:"bytes,4,rep,name=available,proto3" json:"available,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Utilized  map[string]float64 `protobuf:"bytes,5,rep,name=utilized,proto3" json:"utilized,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Profile   *SeccompProfile    `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetNamespaceHierarchyResp_Namespace) Reset() {
	*x = GetNamespaceHierarchyResp_Namespace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceHierarchyResp_Namespace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceHierarchyResp_Namespace) ProtoMessage() {}

func (x *GetNamespaceHierarchyResp_Namespace) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceHierarchyResp_Namespace.ProtoReflect.Descriptor instead.
func (*GetNamespaceHierarchyResp_Namespace) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{11, 0}
}

func (x *GetNamespaceHierarchyResp_Namespace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetNamespaceHierarchyResp_Namespace) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *GetNamespaceHierarchyResp_Namespace) GetTotal() map[string]float64 {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *GetNamespaceHierarchyResp_Namespace) GetAvailable() map[string]float64 {
	if x != nil {
		return x.Available
	}
	return nil
}

func (x *GetNamespaceHierarchyResp_Namespace) GetUtilized() map[string]float64 {
	if x != nil {
		return x.Utilized
	}
	return nil
}

func (x *GetNamespaceHierarchyResp_Namespace) GetProfile() *SeccompProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

type GetNamespaceHierarchyResp_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Total   map[string]float64 `protobuf:"bytes,3,rep,name=total,proto3" json:"total,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	Profile *SeccompProfile    `protobuf:"bytes,6,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *GetNamespaceHierarchyResp_App) Reset() {
	*x = GetNamespaceHierarchyResp_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_meridian_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNamespaceHierarchyResp_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNamespaceHierarchyResp_App) ProtoMessage() {}

func (x *GetNamespaceHierarchyResp_App) ProtoReflect() protoreflect.Message {
	mi := &file_meridian_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNamespaceHierarchyResp_App.ProtoReflect.Descriptor instead.
func (*GetNamespaceHierarchyResp_App) Descriptor() ([]byte, []int) {
	return file_meridian_proto_rawDescGZIP(), []int{11, 1}
}

func (x *GetNamespaceHierarchyResp_App) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetNamespaceHierarchyResp_App) GetTotal() map[string]float64 {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *GetNamespaceHierarchyResp_App) GetProfile() *SeccompProfile {
	if x != nil {
		return x.Profile
	}
	return nil
}

var File_meridian_proto protoreflect.FileDescriptor

var file_meridian_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x69, 0x61,
	0x6e, 0x2d, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x03,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x3a, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x63, 0x63, 0x6f,
	0x6d, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x39, 0x0a,
	0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x3e, 0x0a, 0x12,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x15, 0x0a, 0x13,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0xb3, 0x02, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x2e, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12,
	0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x3c, 0x0a, 0x19, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x44, 0x65, 0x66, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x19, 0x73, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x1a, 0x39,
	0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0c, 0x0a, 0x0a, 0x41, 0x64, 0x64,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x56, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x0f, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc7, 0x04,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x44, 0x0a,
	0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x55,
	0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x75, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3c, 0x0a, 0x0e,
	0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3b, 0x0a, 0x0d, 0x55, 0x74,
	0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x22, 0xbe, 0x08, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72,
	0x63, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48,
	0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x38, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70, 0x70, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x1a, 0x8c, 0x05,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x4e, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x4b, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x57, 0x0a, 0x09,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x54, 0x0a, 0x08, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72,
	0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x2e, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x1a, 0x39, 0x0a, 0x0b,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3b, 0x0a, 0x0d, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xcb, 0x01, 0x0a,
	0x03, 0x41, 0x70, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72,
	0x61, 0x72, 0x63, 0x68, 0x79, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x2e, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x63, 0x63, 0x6f, 0x6d, 0x70,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x1a, 0x38, 0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x18, 0x53,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x43, 0x0a, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x1b, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0xd6,
	0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a,
	0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x32, 0xcf,
	0x04, 0x0a, 0x08, 0x4d, 0x65, 0x72, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x12, 0x41, 0x0a, 0x0c, 0x41,
	0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x06, 0x41, 0x64,
	0x64, 0x41, 0x70, 0x70, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x64, 0x64, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68,
	0x79, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x15, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x22, 0x5a, 0x20, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63,
	0x31, 0x32, 0x73, 0x2f, 0x6d, 0x65, 0x72, 0x69, 0x64, 0x69, 0x61, 0x6e, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_meridian_proto_rawDescOnce sync.Once
	file_meridian_proto_rawDescData = file_meridian_proto_rawDesc
)

func file_meridian_proto_rawDescGZIP() []byte {
	file_meridian_proto_rawDescOnce.Do(func() {
		file_meridian_proto_rawDescData = protoimpl.X.CompressGZIP(file_meridian_proto_rawDescData)
	})
	return file_meridian_proto_rawDescData
}

var file_meridian_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_meridian_proto_goTypes = []interface{}{
	(*AddNamespaceReq)(nil),           // 0: proto.AddNamespaceReq
	(*AddNamespaceResp)(nil),          // 1: proto.AddNamespaceResp
	(*RemoveNamespaceReq)(nil),        // 2: proto.RemoveNamespaceReq
	(*RemoveNamespaceResp)(nil),       // 3: proto.RemoveNamespaceResp
	(*AddAppReq)(nil),                 // 4: proto.AddAppReq
	(*AddAppResp)(nil),                // 5: proto.AddAppResp
	(*RemoveAppReq)(nil),              // 6: proto.RemoveAppReq
	(*RemoveAppResp)(nil),             // 7: proto.RemoveAppResp
	(*GetNamespaceReq)(nil),           // 8: proto.GetNamespaceReq
	(*GetNamespaceResp)(nil),          // 9: proto.GetNamespaceResp
	(*GetNamespaceHierarchyReq)(nil),  // 10: proto.GetNamespaceHierarchyReq
	(*GetNamespaceHierarchyResp)(nil), // 11: proto.GetNamespaceHierarchyResp
	(*SetNamespaceResourcesReq)(nil),  // 12: proto.SetNamespaceResourcesReq
	(*SetNamespaceResourcesResp)(nil), // 13: proto.SetNamespaceResourcesResp
	(*SetAppResourcesReq)(nil),        // 14: proto.SetAppResourcesReq
	(*SetAppResourcesResp)(nil),       // 15: proto.SetAppResourcesResp
	nil,                               // 16: proto.AddNamespaceReq.LabelsEntry
	nil,                               // 17: proto.AddNamespaceReq.QuotasEntry
	nil,                               // 18: proto.AddAppReq.QuotasEntry
	nil,                               // 19: proto.GetNamespaceResp.LabelsEntry
	nil,                               // 20: proto.GetNamespaceResp.TotalEntry
	nil,                               // 21: proto.GetNamespaceResp.AvailableEntry
	nil,                               // 22: proto.GetNamespaceResp.UtilizedEntry
	(*GetNamespaceHierarchyResp_Namespace)(nil), // 23: proto.GetNamespaceHierarchyResp.Namespace
	(*GetNamespaceHierarchyResp_App)(nil),       // 24: proto.GetNamespaceHierarchyResp.App
	nil,                                         // 25: proto.GetNamespaceHierarchyResp.Namespace.LabelsEntry
	nil,                                         // 26: proto.GetNamespaceHierarchyResp.Namespace.TotalEntry
	nil,                                         // 27: proto.GetNamespaceHierarchyResp.Namespace.AvailableEntry
	nil,                                         // 28: proto.GetNamespaceHierarchyResp.Namespace.UtilizedEntry
	nil,                                         // 29: proto.GetNamespaceHierarchyResp.App.TotalEntry
	nil,                                         // 30: proto.SetNamespaceResourcesReq.QuotasEntry
	nil,                                         // 31: proto.SetAppResourcesReq.QuotasEntry
	(*SeccompProfile)(nil),                      // 32: proto.SeccompProfile
}
var file_meridian_proto_depIdxs = []int32{
	16, // 0: proto.AddNamespaceReq.labels:type_name -> proto.AddNamespaceReq.LabelsEntry
	17, // 1: proto.AddNamespaceReq.quotas:type_name -> proto.AddNamespaceReq.QuotasEntry
	32, // 2: proto.AddNamespaceReq.profile:type_name -> proto.SeccompProfile
	18, // 3: proto.AddAppReq.quotas:type_name -> proto.AddAppReq.QuotasEntry
	32, // 4: proto.AddAppReq.profile:type_name -> proto.SeccompProfile
	19, // 5: proto.GetNamespaceResp.labels:type_name -> proto.GetNamespaceResp.LabelsEntry
	20, // 6: proto.GetNamespaceResp.total:type_name -> proto.GetNamespaceResp.TotalEntry
	21, // 7: proto.GetNamespaceResp.available:type_name -> proto.GetNamespaceResp.AvailableEntry
	22, // 8: proto.GetNamespaceResp.utilized:type_name -> proto.GetNamespaceResp.UtilizedEntry
	32, // 9: proto.GetNamespaceResp.profile:type_name -> proto.SeccompProfile
	23, // 10: proto.GetNamespaceHierarchyResp.namespace:type_name -> proto.GetNamespaceHierarchyResp.Namespace
	24, // 11: proto.GetNamespaceHierarchyResp.apps:type_name -> proto.GetNamespaceHierarchyResp.App
	11, // 12: proto.GetNamespaceHierarchyResp.namespaces:type_name -> proto.GetNamespaceHierarchyResp
	30, // 13: proto.SetNamespaceResourcesReq.quotas:type_name -> proto.SetNamespaceResourcesReq.QuotasEntry
	31, // 14: proto.SetAppResourcesReq.quotas:type_name -> proto.SetAppResourcesReq.QuotasEntry
	25, // 15: proto.GetNamespaceHierarchyResp.Namespace.labels:type_name -> proto.GetNamespaceHierarchyResp.Namespace.LabelsEntry
	26, // 16: proto.GetNamespaceHierarchyResp.Namespace.total:type_name -> proto.GetNamespaceHierarchyResp.Namespace.TotalEntry
	27, // 17: proto.GetNamespaceHierarchyResp.Namespace.available:type_name -> proto.GetNamespaceHierarchyResp.Namespace.AvailableEntry
	28, // 18: proto.GetNamespaceHierarchyResp.Namespace.utilized:type_name -> proto.GetNamespaceHierarchyResp.Namespace.UtilizedEntry
	32, // 19: proto.GetNamespaceHierarchyResp.Namespace.profile:type_name -> proto.SeccompProfile
	29, // 20: proto.GetNamespaceHierarchyResp.App.total:type_name -> proto.GetNamespaceHierarchyResp.App.TotalEntry
	32, // 21: proto.GetNamespaceHierarchyResp.App.profile:type_name -> proto.SeccompProfile
	0,  // 22: proto.Meridian.AddNamespace:input_type -> proto.AddNamespaceReq
	2,  // 23: proto.Meridian.RemoveNamespace:input_type -> proto.RemoveNamespaceReq
	4,  // 24: proto.Meridian.AddApp:input_type -> proto.AddAppReq
	6,  // 25: proto.Meridian.RemoveApp:input_type -> proto.RemoveAppReq
	8,  // 26: proto.Meridian.GetNamespace:input_type -> proto.GetNamespaceReq
	10, // 27: proto.Meridian.GetNamespaceHierarchy:input_type -> proto.GetNamespaceHierarchyReq
	12, // 28: proto.Meridian.SetNamespaceResources:input_type -> proto.SetNamespaceResourcesReq
	14, // 29: proto.Meridian.SetAppResources:input_type -> proto.SetAppResourcesReq
	1,  // 30: proto.Meridian.AddNamespace:output_type -> proto.AddNamespaceResp
	3,  // 31: proto.Meridian.RemoveNamespace:output_type -> proto.RemoveNamespaceResp
	5,  // 32: proto.Meridian.AddApp:output_type -> proto.AddAppResp
	7,  // 33: proto.Meridian.RemoveApp:output_type -> proto.RemoveAppResp
	9,  // 34: proto.Meridian.GetNamespace:output_type -> proto.GetNamespaceResp
	11, // 35: proto.Meridian.GetNamespaceHierarchy:output_type -> proto.GetNamespaceHierarchyResp
	13, // 36: proto.Meridian.SetNamespaceResources:output_type -> proto.SetNamespaceResourcesResp
	15, // 37: proto.Meridian.SetAppResources:output_type -> proto.SetAppResourcesResp
	30, // [30:38] is the sub-list for method output_type
	22, // [22:30] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_meridian_proto_init() }
func file_meridian_proto_init() {
	if File_meridian_proto != nil {
		return
	}
	file_meridian_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_meridian_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNamespaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNamespaceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNamespaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNamespaceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveAppResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceHierarchyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceHierarchyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNamespaceResourcesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetNamespaceResourcesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAppResourcesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetAppResourcesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceHierarchyResp_Namespace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_meridian_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNamespaceHierarchyResp_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_meridian_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_meridian_proto_goTypes,
		DependencyIndexes: file_meridian_proto_depIdxs,
		MessageInfos:      file_meridian_proto_msgTypes,
	}.Build()
	File_meridian_proto = out.File
	file_meridian_proto_rawDesc = nil
	file_meridian_proto_goTypes = nil
	file_meridian_proto_depIdxs = nil
}
